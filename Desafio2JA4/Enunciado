Enunciado:
Usando como base lo realizado en el desafío 1, separar el código JavaScript en 3 archivos, de modo que lo relacionado a cada archivo HTML este en un archivo JS correspondiente: index.js contendrá los correspondiente a lo que se hace en el index.html, cursos.js contendrá el código correspondiente a lo que se hace en cursos.html y carreras.js contendrá lo correspondiente al archivo carreras.html. Solo el archivo index.html debe tener la estructura completa de un HTML, carreras.html y cursos.html solo contendrá las etiquetas HTML necesarias para cumplir con lo requerido en el desafío 1. Luego, realizar las siguientes actividades:

Objetivos:
1.- Usando la función load de JQuery, al hacer clic sobre los hipervínculos del index (los que se hicieron en el objetivo 1 del desafío 1), cargar el archivo cursos.html o carreras.html (según el hipervínculo sobre el cual se hizo clic)

2.- Luego de cargar el HTML, en la función callback de cada load, usando la función getScript de JQuery, cargar el archivo JS correspondiente al HTML que se cargo, es decir, luego de cargar el archivo cursos.html, hacer la carga del archivo cursos.js y así con el archivo JS de carreras

3.- En el callback de la instrucción getScript, usando la función getJSON de JQuery, hacer la carga de los archivos JSON correspondiente a cada caso y luego llamar las funciones que existan en el archivo JS correspondiente. Por ejemplo, en el archivo cursos.js debe haber una función que muestra en el archivo cursos.html los cursos existentes, entonces, luego de cargado el archivo cursos.json, ejecutar esa función que muestra los cursos. Usar solo funciones de JQuery para mostrar la información en las paginas y mostrar la información de una forma que sea entendible para el usuario final

4.- Crear un pagina nueva para que un alumno se registre en una sección de un curso. Debe contener un formulario con los inputs para que el usuario introduzca sus datos personales mas 3 select: uno para mostrar las áreas de estudio de los cursos en Cadif1, otro para mostrar los cursos que pertenecen a esa área de estudio y otro para mostrar las secciones abiertas del curso seleccionado. Hacer que el select que muestra las área de estudio se llene al cargarse la pagina con el contenido del archivo areadeestudio.json

5.- Luego de seleccionar un área de estudio, llenar el select de cursos usando el NUEVO ARCHIVO ADJUNTO curso.json (que esta adentro del archivo adjunto comprimido), pero solo mostrando los cursos que correspondan con el área de estudio seleccionada. Los objetos "curso" tienen un atributo llamado "idareaestudio" que corresponde con el atributo "id" de un área de estudio. Por ejemplo, el curso "Adobe Illustrator" tiene en el campo "idareaestudio" el valor "3", porque el área de estudio de ese curso es "Diseño Gráfico" que tiene el valor "3" en el campo "id". Por lo tanto, cuando el usuario seleccione en el "select" de área de estudio el valor "Diseño Gráfico" deberían aparecer en el "select" de "Cursos" solo los cursos de esa área: Illustrator, PhotoShop, Diseño Web, etc. Y así sucesivamente con cada área de estudio